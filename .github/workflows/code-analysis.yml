name: Code Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 1 * * 0'  # Run weekly on Sundays at 01:30 UTC

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go', 'typescript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Setup Go
      if: matrix.language == 'go'
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Setup Node.js
      if: matrix.language == 'typescript'
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Build TypeScript
      if: matrix.language == 'typescript'
      run: |
        npm install --prefix app
        npm run build --prefix app
        npm install --prefix datasource
        npm run build --prefix datasource

    - name: Build Go
      if: matrix.language == 'go'
      run: |
        cd datasource
        go build ./...

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  vulnerability-check:
    name: Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Go vulnerability scanning
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest

    - name: Run govulncheck on datasource
      run: |
        cd datasource
        govulncheck ./...

    # Node.js/TypeScript vulnerability scanning
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies (app)
      run: |
        cd app
        npm install

    - name: Install dependencies (datasource)
      run: |
        cd datasource
        npm install

    - name: Run npm audit (app)
      run: |
        cd app
        npm audit --audit-level=high

    - name: Run npm audit (datasource)
      run: |
        cd datasource
        npm audit --audit-level=high

    # Additional TypeScript security scanning with OWASP Dependency-Check
    - name: Download Dependency-Check
      run: |
        VERSION="8.4.3"
        wget "https://github.com/jeremylong/DependencyCheck/releases/download/v$VERSION/dependency-check-$VERSION-release.zip"
        unzip dependency-check-$VERSION-release.zip

    - name: Run Dependency-Check on app
      run: |
        ./dependency-check/bin/dependency-check.sh --scan app/ --format HTML --format JSON --prettyPrint --failOnCVSS 7
        
    - name: Run Dependency-Check on datasource
      run: |
        ./dependency-check/bin/dependency-check.sh --scan datasource/ --format HTML --format JSON --prettyPrint --failOnCVSS 7

    - name: Upload Dependency-Check reports
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-reports
        path: |
          dependency-check-report.html
          dependency-check-report.json